<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fan.zblog.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.fan.zblog.model.User">
    <id column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    username, email, `password`, createTime, image, nickname, description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from User
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <select id="findAll" resultType="com.fan.zblog.model.User">
    select * from User
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from User
    where username = #{username,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.fan.zblog.model.User">
    insert into User (username, email, `password`, createTime,
      image, nickname, description
      )
    values (#{username}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{image,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fan.zblog.model.User">
    insert into User
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fan.zblog.model.User">
    update User
    <set>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where username = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fan.zblog.model.User">
    update User
    set email = #{email,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      image = #{image,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where username = #{username,jdbcType=VARCHAR}
  </update>
</mapper>